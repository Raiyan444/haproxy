global
	log /dev/log	local0
	log /dev/log	local1 notice
	maxconn 20000
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL). This list is from:
	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
	# An alternative list with additional directives can be obtained from
	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
	ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11

	tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	maxconn 19500
	option	httplog
	option	dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
   	timeout http-request 5s  #Slowloris protection
    option abortonclose
    option http-server-close	

	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

    stats enable
    stats refresh 10s
    stats hide-version
    stats uri /haproxy?stats
    stats auth admin:password

frontend http
	bind *:80
	mode http
	option forwardfor
	acl host_website1 hdr(host) -i www.domain1.in
	acl host_website2 hdr(host) -i www.ssldomain1.com
	
	http-request redirect prefix http://www.%[hdr(host)] code 301 unless { hdr_beg(host) -i www. }
	redirect scheme https code 301 if { hdr(Host) -i www.ssldomain2.com } !{ ssl_fc }	
	
	
	use_backend domain1_web if host_website1
	use_backend ssldomain1_web if host_website2
	

frontend https
#   bind *:80
	
    bind *:443 ssl crt /etc/ssl/private/ssldomain1.pem	crt /etc/ssl/private/ssldomain2.pem
	option forwardfor

#   redirect scheme https code 301 if { hdr(Host) -i auromine.com } !{ ssl_fc }    # Redirect to https if incoming is http

    rspadd Strict-Transport-Security:\ max-age=31536000   # HSTS stricty allow only https connection
    rspdel X-XSS-Protection:\ 1;\ mode=block
    rspadd X-XSS-Protection:\ 1;\ mode=block
    rspirep ^(set-cookie:.*) \1;\ Secure   # send cookies over https only

    default_backend ssldomain2_web

backend domain1_web
    mode http
    balance roundrobin
    option forwardfor
    server domain1 10.0.0.10:80 check


backend ssldomain1_web
    mode http
    balance roundrobin
    option forwardfor
    server ssldomain1 172.16.0.10:80 check


backend ssldomain2_web
    mode http
    balance roundrobin
    option httpclose
    option forwardfor
	http-request set-header X-Forwarded-Port %[dst_port]
#	http-request add-header X-Forwarded-Proto https if [ ssl_fc ]
    option httpchk GET / HTTP/1.1\r\nHost:ssldomain2.com
	server ssldomain2 172.16.0.10:80 check



